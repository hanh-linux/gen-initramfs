#!/bin/sh

. /hookorder
mount_handle=mount_fs
init=/usr/bin/openrc-init

msg() {
echo ">> $@..."
}

err() {
echo ">>> $@"
}

die() {
err "$@"
err "Dropping you into the emergency shell"
/bin/sh
}

mount_fs() {
if test -n "$rootfstype"; then
       	rootfstype="$rootfstype,"
fi
rootfstype="$rootfstype$ro"

if ! test -b "$DEV"; then
       	die "Device $DEV is not found" 
fi
mount -n -t ${rootfstype} -o ${rootflags} ${DEV} $1 
}

parse_root() {
case "$root" in 
/dev/*  ) DEV="$root";;
UUID=*  ) eval $root; DEV=$(blkid --uuid="$UUID");;
LABEL=* ) eval $root; DEV=$(blkid --label="$LABEL");;
""      ) die "Root not specified!"
esac
}

export PATH="/bin:/sbin:/usr/bin:/usr/sbin"

msg "Mounting essential filesystems"
mount -n -t devtmpfs devtmpfs /dev
mount -n -t sysfs sysfs /sys
mount -n -t proc proc /proc
mount -n -t tmpfs tmpfs /run

msg "Parsing the command line"
read -r cmdline < /proc/cmdline

for x in $cmdline; do 
case $x in
init=*       )      init=${x#init=}              ;;
root=*       )      root=${x#root=}              ;;
rootfstype=* )      rootfstype=${x#rootfstype=}  ;;
rootflag=*   )      rootflags=${x#rootflags=}    ;;
ro           )      ro="ro"                      ;;
rw           )      ro="rw"                      ;;
modules=*    )      modules="${x#modules=}"      ;;
esac
done

if test -n "$modules"; then 
	msg "Loading /proc/cmdline modules: $modules"
	modprobe $modules
fi

if test -n "$hooks_before"; then
	for x in $hooks_before ; do
		echo "::: Running $x"
		. /hooks-before/$x
	done
fi

if test -n "$hooks_between"; then 
	for x in $hooks_between ; do
		. /hooks-between/$x 
	done
fi

parse_root

msg "Using $mount_handle command for mounting file system"
if ! $mount_handle /new_root ; then
       die "Failed to mount to /new_root" 
else
        msg "Mounted $device on /new_root"
fi

if ! test -f "/new_root/$init"; then
	die "$init not found"
fi

if test -n "$hooks_after"; then
	for x in $hooks_after ; do
		. /hooks-after/$x
	done
fi

exec switch_root /new_root $init "$@"
